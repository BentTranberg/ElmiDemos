<Window
    x:Class="MultiSel.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Extended ListBox" Height="330" Width="400"
    WindowStartupLocation="CenterScreen">
    <StackPanel>
        <TextBlock>
            <Run>The idea is to click the list box items, and not the checkboxes,</Run>
            <LineBreak/>
            <Run>which are disabled anyway, and only the selected lines will then be checked.</Run>
        </TextBlock>
        <!--
        The idea here is to propagate ListBoxItem.IsSelected to CheckBox.IsChecked, and
        then on to the field "Marked" in our item model through a binding. These two steps
        each work perfectly on their own, but when combined then the binding to the model
        stops working.
        Since this solution has the smell of a hack, it is not of interest to research why
        it doesn't work.
        -->
        <ListBox ItemsSource="{Binding Lines}" SelectionMode="Extended">
            <ListBox.ItemTemplate>
                <!--
                To verify that Binding Marked is working by itself,
                remove IsEnabled="False" from the checkbox,
                and remove the entire DataTemplate.Triggers,
                then run and click on the checkboxes to see the effect.

                For research, it's probably an idea to remove IsEnabled="False"
                on the checkbox, just in case having it disabled can cause
                something to miss. But then don't click on it for selecting
                the list box item.
                -->
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{Binding Id}"/>
                        <CheckBox x:Name="cb" IsEnabled="False" IsChecked="{Binding Marked}" Background="LightGreen"/>
                        <Label Content="{Binding DisplayText}" Background="LightBlue"/>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor,
                                AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                            <Setter TargetName="cb" Property="IsChecked" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor,
                                AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False">
                            <Setter TargetName="cb" Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </StackPanel>
</Window>